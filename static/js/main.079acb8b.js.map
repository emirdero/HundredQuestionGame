{"version":3,"file":"static/js/main.079acb8b.js","mappings":"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","sources":["src/screens/StartScreen.js","src/data/questions.js","src/screens/SelectionScreen.js","src/screens/GameScreen.js","src/screens/InfoScreen.js","src/navigation/AppNavigator.js","index.ts","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// src/screens/StartScreen.js\r\nimport React from 'react';\r\nimport { View, Text, Button, StyleSheet } from 'react-native';\r\n\r\nexport default function StartScreen({ navigation }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>100 Spørsmål</Text>\r\n      <View style={styles.buttonContainer}>\r\n        <Button\r\n          title=\"Start Spill\"\r\n          onPress={() => navigation.navigate('Selection')}\r\n        />\r\n      </View>\r\n      <View style={styles.buttonContainer}>\r\n        <Button\r\n          title=\"Informasjon\"\r\n          onPress={() => navigation.navigate('Info')}\r\n          color=\"#841584\" // Optional: different color\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#000000',\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    marginBottom: 40,\r\n  },\r\n  buttonContainer: {\r\n    marginVertical: 10,\r\n    width: '80%',\r\n  },\r\n});","// src/data/questions.js\r\nexport const questionSets = [\r\n    {\r\n      id: 'helt-jaevlig',\r\n      name: '100 spørsmål, helt jævlig edition',\r\n      themes: [\r\n          // Theme 1: Tabu (fra bilde 1)\r\n          {\r\n            name: 'Tabu 0-10 🐸🐸🐸',\r\n            questions: [\r\n              '1. Hvem er pappa uten at de vet det? 👀',\r\n              '2. Hvem spytter på bibelen hver kveld? 🙏',\r\n              '3. Hvem hadde du begått hatkriminalitet sammen med? 🤬',\r\n              '4. Hvem Cummer? 💁‍♀️',\r\n              '5. Hvem hater kvinner? 😘',\r\n              '6. Hvem liker å bli kalt pappa? 🥴',\r\n              '7. Hvem mener den industrielle revolusjonen og dens konsekvenser var et stort feilgrep for menneskeheten? 🎂',\r\n              '8. Hvem har sex før ekteskap, og har ingen dårlig samvittighet?! 👩‍❤️‍💋‍👨⛽️',\r\n              '9. Hvem ville du abortert? 😅',\r\n              '10. Hvem er menneskesmugler? 🫂',\r\n            ],\r\n          },\r\n          // Theme 2: Psykiske lidelser (fra bilde 3)\r\n          {\r\n            name: 'Psykiske lidelser (10-20 spørsmål - 🥴SKÅL🥴)',\r\n            questions: [\r\n              '1. Hvem blir den verste psykologen? 😂🧑‍⚕️',\r\n              '2. Hvem er mest deprimerende? 🤔',\r\n              '3. Hvem kunne blitt kjendis, og øyeblikkelig ende opp i en seksuell trakasserings skandale?!?!?!? 🤗',\r\n              '4. Hvem har mørke intensjoner i kveld? 😈',\r\n              '5. Hvem er en hallusinasjon diktet opp av meg? 🧠',\r\n              '6. Hvem sin personlighet er inspirert av the Joker? 🤡',\r\n              '7. Hvem kunne fått psykotisk analprolaps på en date? 💀',\r\n              '8. Hvem kunne sugd en GÆRNING? 😩',\r\n              '9. Hvem kunne farga håret blått? NO🛢️',\r\n              '10. Hvem er mest borderline? 🥴',\r\n            ],\r\n          },\r\n          // Theme 3: Fysiske lidelser (fra bilde 2)\r\n          {\r\n            name: 'Fysiske lidelser (20-30 spørsmål - 🤬SKÅL🤬)',\r\n            questions: [\r\n              '1. Hvem av gutta har null rizz',\r\n              '2. Hvem hadde sett deiligst ut i rullestol? ♿️',\r\n              '3. Hvem er impotent?🕴️',\r\n              '4. Hvem av jentene gjør gutta impotente?👩‍❤️‍💋‍👨',\r\n              '5. Hvem er helt jævlig? 🧑‍🦰 DÆ HERMAN GETMAN!!!!!!!!', // Note: Text might be specific to the user's group\r\n              '6. Hvem hadde runka en sv*nske? 🤔', // Note: Censored word\r\n              '7. Hvem er uironisk fra nord-norge? 🥶',\r\n              '8. Hvem kunne drept en ulv med bare henda?🐺',\r\n              '9. Hvem kan holde pusten lengst? (Hiv til din valgfrie motkjemper, taperen må rappe sin favoritt låt)🎼',\r\n              '10. Hvem er tvers igjennom et godt menneske? (NOT 😂😂😂😭😭😭)',\r\n            ],\r\n          },\r\n          // Theme 4: Fylla (fra bilde 4)\r\n          {\r\n            name: 'Fylla (30-40 spørsmål - 🥴SKÅL🥴)',\r\n            questions: [\r\n              '1. Hvem blir fullest i kveld?!?!?!?!?!?!? 🍺',\r\n              '2. Hvem må fortelle sin drøyeste fylla-fortelling? 🍆',\r\n              '3. Hvem pisser i buksa i aften? 🥜',\r\n              '4. Hvem SMOKER DA WEEEEEEEEEEED??? 🍀',\r\n              '5. Hvem har allerede drete i buksa i kveld? 💩',\r\n              '6. Hvem spurte? 👍',\r\n              '7. Hvem må dra hjem? 💀',\r\n              '8. Hvem er utpult bunnslam fra helvete? 👹',\r\n              '9. Hvem kunne shotta ballesvetten til personen til min venstre? 🥃',\r\n              '10. Hvem selvmedisinerer på alkohol? 🍷',\r\n             ],\r\n          },\r\n          // Theme 5: Bitches (fra bilde 5)\r\n          {\r\n             name: 'Bitches (40-50 spørsmål - 🚶SKÅL🚶)',\r\n             questions: [\r\n              '1. Hvem ligner på Shrek fra Shrek 3? 🤔',\r\n              '2. Hvem må være med meg på kino til fredag og det er ikke lov å si nei når leken er ferdig? 🎬',\r\n              '3. Hvem er jævlig CRINGE? 🐺',\r\n              '4. Hvem hadde tatt i mot et objekt når *insert name* kaster den til de? 🤸‍♀️', // Note: Placeholder\r\n              '5. Hvem syns Vegard Harm er hysterisk morsom?👩‍⚕️',\r\n              '6. Hvem trenger hjelp? 🆘',\r\n              '7. Hvem har FAKTISK angst??? 🤫',\r\n              '8. Hvem savner hun? 😭',\r\n              '9. Hvem har, på ekte, astma? 😮‍💨',\r\n              '10. Hvem tror Islam er et sted? ✈️',\r\n             ],\r\n          },\r\n          // Theme 6: Utelivet i Lillehammer (fra bilde 7)\r\n          {\r\n            name: 'Skolen (50-60 spørsmål - 🍆SKÅL🍆)',\r\n            questions: [\r\n              '1. Hvem lukter dritt og piss og faen på lesesalen?🤢',\r\n              '2. Hvem kan ikke lese? 🤓',\r\n              '3. Hvem har runka og cumma til pornostjernen Asa Akira på dass på skolen? 😩',\r\n              '4. Hvem har KUN cumma? 🤗',\r\n              '5. Hvem er lovlig tilbakestående? <55 IQ🤓',\r\n              '6. Hvem var på do før meg, du glemte å trekke ned og det lukter cum og dritt og piss for faen jo🧀',\r\n              '7. Hvem drømmer om å bli gründer på skolen?? 🤔',\r\n              '8. Hvem skjønner? 🤔',\r\n              '9. Hvem er alltid to skritt foran? 🤔',\r\n              '10. Hvem er gruppas Ben Shapiro?🕴️',\r\n            ],\r\n          },\r\n          // Theme 7: Skolen (fra bilde 6)\r\n          {\r\n            name: 'Utelivet (Lillehammer) (60-70 spørsmål - 🦞SKÅL🦞)',\r\n            questions: [\r\n              '1. hvem er en creepy jævel på dansegulvet? 🕺',\r\n              '2. Hvem har pult elgen på nikkers (rip)?🦌',\r\n              '3. Hvem har blitt fingra av <<han med sykkelen» på felix (lokal-pokal)? 🚴',\r\n              '4. Hvem spanderer pils på meg etterpå? IKKE LOV Å SI NEI ETTER LEKEN🍺',\r\n              '5. Hvem har sunget Breaking Free på Paddys (karaoke pub)?🎤',\r\n              '6. Hvem har tatt kokain på dassen på brennis (hip utested)? 🧂',\r\n              '7. Hvem er en byrde for samfunnet? 🧑‍🎤',\r\n              '8. Hvem reiser til Berlin og bare forsvinner? 😶‍🌫️',\r\n              '9. Hvem ender opp som stamkunde på felix (brun pub)?☠️',\r\n              '10. Hvem er en sau i ulveklær? 🐑',\r\n            ],\r\n          },\r\n          // Theme 8: Gutta (fra bilde 8)\r\n          {\r\n            name: 'Gutta (70-80 spørsmål - 🚂SKÅL🚂)',\r\n            questions: [\r\n              '1. Kast til den fisken frykter🎣',\r\n              '2. hvem kunne pissa i anti-bac dispenseren? (piss-spenser)',\r\n              '3. Hvem blir oppslukt av livets uunngåelig meningsløshet in the club? 😶‍🌫️',\r\n              '4. hvem kysser sine homies god natt?👩‍❤️‍💋‍👨',\r\n              '5. Hvem sine tår ville du sutta på?🦶',\r\n              '6. hvem er det du oppriktiktig uironisk hater? (Ikke kødd (helt serr))💀',\r\n              '7. hvem utvikler tidlig alzheimers? 👵',\r\n              '8. Hvem er fra Moss? 🤢',\r\n              '9. Hvem hadde du tatt en Northug med? 🇳🇴',\r\n              '10. Hvem er snill og grei? 🥰',\r\n            ],\r\n          },\r\n          // Theme 9: HELT FORJÆVLIG (fra bilde 10)\r\n          {\r\n            name: 'HELT FORJÆVLIG (80-90 spørsmål - 🤏SKÅL🤏)',\r\n            questions: [\r\n              '1. Hvem kommer mest sannsynlig til å drepe noen innen de 5 neste årene? 😈',\r\n              '2. Hvem burde bytte profilbilde til Fredrik Solvang?🕴️',\r\n              '3. Hvem kunne du ønske du aldri hadde møtt?👻',\r\n              '4. hvem må legge ulykken bak seg? Det er over 10 år siden, det var ikke din feil🛣️',\r\n              '5. hvem ønsker seg prolaps til jul?🎁',\r\n              '6. Hvem hadde takket ja til et ekstra kromosom i bytte mot å få 1 million instragram følgere? 🧑‍🎤',\r\n              '7. Hvem er på tynn is? 🧊',\r\n              '8. Hvem burde ikke ha stemmerett? 🧑‍🦽',\r\n              '9. HVEM DREPER???',\r\n              '10. Hvem må drikke opp drikken sin mens de står på henda inntil veggen?🤸‍♂️',\r\n            ],\r\n          },\r\n          // Theme 10: 100 spørsmål (fra bilde 9)\r\n          {\r\n             name: '90-100 spørsmål - 🐸SKÅL🐸',\r\n             questions: [\r\n               'Hvem bruker axe body spray',\r\n               'Hvem hater menn',\r\n               'Hvem kunne pult på skolen?',\r\n               'Hvem kommer til å utvikle høyre ekstreme meninger?',\r\n               'Hvem kunne blitt kjendis, og øyeblikkelig ende opp i en seksuell trakasserings skandale?!?!?!', // Note: Duplicate from theme 2\r\n               'Hvem er kommunist?',\r\n               'Hvem må gjøre en helhjertta etterligning av jim carry?',\r\n               'Hvem har pappa problemer?',\r\n               'Hvem vil mest sannsynlig ta selvmord innen de 5 neste årene?', // Note: Duplicate/Similar to theme 9\r\n               'Hvem får flashback til Hegel når de tenker', // Note: Seems cut off in image\r\n             ],\r\n          },\r\n      ]\r\n    },\r\n  ];\r\n  \r\n  export const DRINK_PROMPT = \"Alle drikker!\";\r\n  export const GAME_OVER_PROMPT = \"Spillet er ferdig! Skål for alle utenom sv¨nsker!\";","// src/screens/SelectionScreen.js\r\nimport React from 'react';\r\nimport { View, Text, Button, StyleSheet, ScrollView } from 'react-native';\r\nimport { questionSets } from '../data/questions';\r\n\r\nexport default function SelectionScreen({ navigation }) {\r\n  const handleSelectSet = (set) => {\r\n    navigation.navigate('Game', { selectedSet: set });\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      <Text style={styles.title}>Velg Spørsmålsett</Text>\r\n      {questionSets.map((set) => (\r\n        <View key={set.id} style={styles.buttonContainer}>\r\n          <Button\r\n            title={set.name}\r\n            onPress={() => handleSelectSet(set)}\r\n          />\r\n        </View>\r\n      ))}\r\n      {/* Add more buttons if you have more sets */}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#000000',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 30,\r\n    textAlign: 'center',\r\n    color: '#FFFFFF',\r\n  },\r\n  buttonContainer: {\r\n    marginVertical: 10,\r\n    width: '90%',\r\n  },\r\n});","// src/screens/GameScreen.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Dimensions } from 'react-native';\r\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\r\nimport Animated, {\r\n    useSharedValue,\r\n    useAnimatedStyle,\r\n    withTiming,\r\n    runOnJS,\r\n} from 'react-native-reanimated';\r\nimport { DRINK_PROMPT, GAME_OVER_PROMPT } from '../data/questions'; // Make sure this path is correct\r\n\r\nconst { width: SCREEN_WIDTH } = Dimensions.get('window');\r\nconst SWIPE_THRESHOLD = SCREEN_WIDTH * 0.25; // Min distance to trigger swipe\r\nconst ANIMATION_DURATION = 250; // ms\r\n\r\n// Enum-like object for card content type\r\nconst CardType = {\r\n    THEME: 'THEME',\r\n    QUESTION: 'QUESTION',\r\n    PROMPT: 'PROMPT',\r\n    GAMEOVER: 'GAMEOVER',\r\n};\r\n\r\nexport default function GameScreen({ route, navigation }) {\r\n    const { selectedSet } = route.params;\r\n\r\n    const [themeIndex, setThemeIndex] = useState(0);\r\n    // -1 for theme intro, 0-9 for questions, 10 for drink prompt\r\n    const [questionIndex, setQuestionIndex] = useState(-1);\r\n    const [currentText, setCurrentText] = useState('');\r\n    const [cardType, setCardType] = useState(CardType.THEME);\r\n\r\n    const translateX = useSharedValue(0);\r\n    const opacity = useSharedValue(1);\r\n\r\n    // Determine current content based on state\r\n    useEffect(() => {\r\n        if (cardType === CardType.GAMEOVER) {\r\n            setCurrentText(GAME_OVER_PROMPT);\r\n            return;\r\n        }\r\n\r\n        // Ensure selectedSet and themes exist before accessing\r\n        if (!selectedSet || !selectedSet.themes || !selectedSet.themes[themeIndex]) {\r\n             console.error(\"Invalid set or theme index:\", themeIndex, selectedSet);\r\n             setCardType(CardType.GAMEOVER); // Or navigate back\r\n             setCurrentText(GAME_OVER_PROMPT);\r\n             return;\r\n        }\r\n\r\n        const currentTheme = selectedSet.themes[themeIndex];\r\n\r\n        if (questionIndex === -1) {\r\n            setCardType(CardType.THEME);\r\n            setCurrentText(`Tema: ${currentTheme.name}`);\r\n        } else if (questionIndex >= 0 && questionIndex < currentTheme.questions.length) {\r\n            setCardType(CardType.QUESTION);\r\n            setCurrentText(currentTheme.questions[questionIndex]);\r\n        } else if (questionIndex === currentTheme.questions.length) {\r\n            setCardType(CardType.PROMPT);\r\n            setCurrentText(DRINK_PROMPT);\r\n        } else {\r\n            // Fallback case, should ideally not be reached with proper logic\r\n            console.warn(\"Unexpected state:\", { themeIndex, questionIndex });\r\n             if (themeIndex >= selectedSet.themes.length -1) {\r\n                 setCardType(CardType.GAMEOVER);\r\n                 setCurrentText(GAME_OVER_PROMPT);\r\n             } else {\r\n                 // Try to recover by moving to next theme prompt maybe? Or just show game over.\r\n                 setCardType(CardType.GAMEOVER); // Safer default\r\n                 setCurrentText(GAME_OVER_PROMPT);\r\n             }\r\n        }\r\n    }, [themeIndex, questionIndex, selectedSet, cardType]); // Added cardType dependency\r\n\r\n\r\n    // --- State Update Logic ---\r\n    const goToNext = () => {\r\n        // Check if selectedSet and themes are valid before proceeding\r\n        if (!selectedSet || !selectedSet.themes || !selectedSet.themes[themeIndex]) return;\r\n\r\n        const currentTheme = selectedSet.themes[themeIndex];\r\n        if (questionIndex < currentTheme.questions.length - 1) {\r\n            // Next question in the same theme\r\n            setQuestionIndex(qIndex => qIndex + 1);\r\n        } else if (questionIndex === currentTheme.questions.length - 1) {\r\n            // Last question of theme done -> show prompt\r\n            setQuestionIndex(qIndex => qIndex + 1); // To trigger prompt display\r\n        }\r\n        // Swiping next on Theme/Prompt/GameOver does nothing, handled by tap\r\n    };\r\n\r\n    const goToPrevious = () => {\r\n        // Check if selectedSet and themes are valid before proceeding\r\n        if (!selectedSet || !selectedSet.themes) return;\r\n\r\n        if (questionIndex > 0) {\r\n            // Previous question in the same theme\r\n            setQuestionIndex(qIndex => qIndex - 1);\r\n        } else if (questionIndex === 0) {\r\n            // Go back to theme title\r\n            setQuestionIndex(-1);\r\n            setCardType(CardType.THEME); // Explicitly set type\r\n        } else if (questionIndex === -1 && themeIndex > 0) {\r\n            // On Theme title, go to *prompt* of previous theme\r\n             // Check if previous theme exists\r\n            if (!selectedSet.themes[themeIndex - 1]) return;\r\n            const prevTheme = selectedSet.themes[themeIndex - 1];\r\n            setThemeIndex(tIndex => tIndex - 1);\r\n            setQuestionIndex(prevTheme.questions.length); // Show prompt of previous theme\r\n            setCardType(CardType.PROMPT); // Explicitly set type\r\n        } else if (questionIndex === selectedSet.themes[themeIndex]?.questions.length) {\r\n            // On Prompt, go to last question of current theme\r\n            // Check if current theme and questions exist\r\n            if (!selectedSet.themes[themeIndex]?.questions) return;\r\n            setQuestionIndex(selectedSet.themes[themeIndex].questions.length - 1);\r\n            setCardType(CardType.QUESTION); // Explicitly set type\r\n        }\r\n         // Swiping back on GameOver does nothing\r\n    };\r\n\r\n    const handleTap = () => {\r\n        if (cardType === CardType.THEME) {\r\n            // Check if current theme and questions exist\r\n             if (!selectedSet?.themes[themeIndex]?.questions) return;\r\n            // Start questions for the current theme\r\n            setQuestionIndex(0);\r\n            setCardType(CardType.QUESTION); // Explicitly set type\r\n            resetCardPosition(false); // Reset position without animation for instant update\r\n        } else if (cardType === CardType.PROMPT) {\r\n            // Move to the next theme or game over\r\n            // Check if selectedSet and themes exist\r\n             if (!selectedSet?.themes) return;\r\n            if (themeIndex < selectedSet.themes.length - 1) {\r\n                setThemeIndex(tIndex => tIndex + 1);\r\n                setQuestionIndex(-1); // Show next theme title\r\n                setCardType(CardType.THEME); // Explicitly set type\r\n                resetCardPosition(false);\r\n            } else {\r\n                // Game Over\r\n                setCardType(CardType.GAMEOVER);\r\n                resetCardPosition(false);\r\n            }\r\n        } else if (cardType === CardType.GAMEOVER) {\r\n            navigation.popToTop(); // Go back to the start screen\r\n        }\r\n        // Tapping on a question card does nothing, requires swipe\r\n    };\r\n\r\n\r\n    // --- Animation Logic ---\r\n    const animatedStyle = useAnimatedStyle(() => ({\r\n        transform: [{ translateX: translateX.value }],\r\n        opacity: opacity.value,\r\n    }));\r\n\r\n    const resetCardPosition = (animated = true) => {\r\n        if (animated) {\r\n            translateX.value = withTiming(0, { duration: ANIMATION_DURATION });\r\n            opacity.value = withTiming(1, { duration: ANIMATION_DURATION });\r\n        } else {\r\n            translateX.value = 0;\r\n            opacity.value = 1;\r\n        }\r\n    };\r\n\r\n    // Wrapper functions for state updates needed for runOnJS\r\n    const updateNextState = () => {\r\n        goToNext();\r\n    };\r\n    const updatePrevState = () => {\r\n        goToPrevious();\r\n    };\r\n\r\n    // --- Gesture Handling ---\r\n    const panGesture = Gesture.Pan()\r\n        .onUpdate((event) => {\r\n            // Only allow horizontal swiping on Question cards\r\n            if (cardType === CardType.QUESTION) {\r\n                translateX.value = event.translationX;\r\n                // Dim card slightly when swiping\r\n                opacity.value = 1 - Math.abs(event.translationX / SCREEN_WIDTH);\r\n            } else {\r\n                // Prevent dragging on Theme/Prompt/GameOver\r\n                translateX.value = 0;\r\n            }\r\n        })\r\n        .onEnd((event) => {\r\n            if (cardType !== CardType.QUESTION) {\r\n                // If not a question card, reset immediately if dragged slightly by mistake\r\n                 // Only reset if it was actually moved (check threshold maybe?)\r\n                 if (Math.abs(translateX.value) > 5) {\r\n                     resetCardPosition();\r\n                 }\r\n                return;\r\n            }\r\n\r\n            const translationX = event.translationX;\r\n            if (translationX < -SWIPE_THRESHOLD) {\r\n                // Swipe Left (Next)\r\n                translateX.value = withTiming(-SCREEN_WIDTH, { duration: ANIMATION_DURATION }, (finished) => {\r\n                    if (finished) {\r\n                        runOnJS(updateNextState)(); // Update state AFTER animation finishes\r\n                        // Run state update on JS thread AFTER animation\r\n                        // Reset position off-screen right then slide in\r\n                        translateX.value = SCREEN_WIDTH; // Instantly move off-screen right\r\n                        requestAnimationFrame(() => { // Ensure state update propagates before next animation\r\n                            resetCardPosition(); // Slide in from right\r\n                        })\r\n                    } else {\r\n                        // If animation didn't finish (interrupted?), snap back\r\n                        resetCardPosition();\r\n                    }\r\n                });\r\n                opacity.value = withTiming(0, { duration: ANIMATION_DURATION });\r\n\r\n            } else if (translationX > SWIPE_THRESHOLD) {\r\n                // Swipe Right (Previous)\r\n                translateX.value = withTiming(SCREEN_WIDTH, { duration: ANIMATION_DURATION }, (finished) => {\r\n                    if (finished) {\r\n                        runOnJS(updatePrevState)(); // Update state AFTER animation finishes\r\n                        // Reset position off-screen left then slide in\r\n                        translateX.value = -SCREEN_WIDTH; // Instantly move off-screen left\r\n                         requestAnimationFrame(() => { // Ensure state update propagates before next animation\r\n                            resetCardPosition(); // Slide in from left\r\n                         })\r\n                    } else {\r\n                        resetCardPosition();\r\n                    }\r\n                });\r\n                opacity.value = withTiming(0, { duration: ANIMATION_DURATION });\r\n\r\n            } else {\r\n                // Didn't swipe far enough, snap back\r\n                resetCardPosition();\r\n            }\r\n        });\r\n\r\n    // Separate Tap gesture for advancing Theme/Prompt/GameOver\r\n    const tapGesture = Gesture.Tap().onEnd(() => {\r\n        // Run tap logic only if it's not a question card\r\n        if (cardType !== CardType.QUESTION) {\r\n            runOnJS(handleTap)();\r\n        }\r\n    });\r\n\r\n    // Combine gestures: Pan has priority for questions, Tap for others\r\n    const combinedGesture = Gesture.Exclusive(panGesture, tapGesture);\r\n\r\n    // *** THEME HEADER TEXT - GET NAME SAFELY ***\r\n    const currentThemeName = selectedSet.themes[themeIndex]?.name || '';\r\n\r\n    return (\r\n        // The main container View now holds the theme header AND the gesture detector\r\n        // *** MAIN CONTAINER VIEW ***\r\n        <View style={styles.container} >\r\n            {/* *** THEME HEADER TEXT - DISPLAY CONDITIONALLY *** */}\r\n            {cardType === CardType.QUESTION && (\r\n                <Text style={styles.themeHeaderText}>\r\n                    {currentThemeName}\r\n                </Text>\r\n            )}\r\n\r\n            {/* The GestureDetector now wraps the animated card part */}\r\n            <GestureDetector gesture={combinedGesture}>\r\n                {/* *** CARD CONTAINER VIEW *** */}\r\n                <View style={styles.cardContainer} collapsable={false}>\r\n                    {/* Card container helps position the card below the theme header */}\r\n                    <Animated.View style={[styles.card, animatedStyle]}>\r\n                        <Text style={\r\n                            cardType === CardType.THEME ? styles.themeText :\r\n                            cardType === CardType.PROMPT ? styles.promptText :\r\n                            cardType === CardType.GAMEOVER ? styles.gameOverText :\r\n                            styles.questionText // Default to question style\r\n                        }>\r\n                            {currentText}\r\n                        </Text>\r\n                    </Animated.View>\r\n                </View>\r\n            </GestureDetector>\r\n        </View>\r\n    );\r\n}\r\n\r\n// --- Styles (Dark Theme Applied) ---\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        // justifyContent: 'center', // Adjust vertical alignment slightly if needed\r\n        alignItems: 'center',\r\n        backgroundColor: '#000000', // Black background\r\n        paddingTop: 60, // Give space for theme header (adjust as needed)\r\n        paddingHorizontal: 10,\r\n    },\r\n    // Style for the theme header text\r\n    themeHeaderText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        color: '#FFFFFF', // White text\r\n        textAlign: 'center',\r\n        marginBottom: 20, // Space between header and card\r\n        paddingHorizontal: 15, // Prevent text touching edges\r\n    },\r\n    // A container for the card (useful for flexbox layout)\r\n    cardContainer: {\r\n       flex: 1, // Takes remaining space below header\r\n       width: '100%',\r\n       justifyContent: 'center', // Center card vertically in remaining space\r\n       alignItems: 'center',\r\n       paddingBottom: 40, // Add some padding at the bottom if needed\r\n    },\r\n    card: {\r\n        width: SCREEN_WIDTH * 0.9,\r\n        height: '70%', // Adjust as needed, maybe slightly less due to header\r\n        backgroundColor: '#222222', // Dark grey card background\r\n        borderRadius: 20,\r\n        padding: 25,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        // Shadows are less visible on dark backgrounds, adjust or remove if desired\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 5 },\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 10,\r\n        elevation: 10,\r\n    },\r\n    themeText: {\r\n        fontSize: 28,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        color: '#FFFFFF', // White text\r\n    },\r\n    questionText: {\r\n        fontSize: 22,\r\n        textAlign: 'center',\r\n        color: '#FFFFFF', // White text\r\n    },\r\n    promptText: {\r\n        fontSize: 26,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        color: '#FFFFFF', // White text (Maybe a light red like #FF8A80 ?)\r\n    },\r\n    gameOverText: {\r\n        fontSize: 26,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        color: '#FFFFFF', // White text (Maybe a light green like #B9F6CA ?)\r\n    }\r\n});","// src/screens/InfoScreen.js\r\nimport React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nexport default function InfoScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Informasjon</Text>\r\n      <Text style={styles.text}>\r\n        Dette er et drikkespill med 100 spørsmål fordelt på 10 temaer.\r\n      </Text>\r\n      <Text style={styles.text}>\r\n        Sveip til venstre for neste spørsmål, høyre for forrige.\r\n      </Text>\r\n      <Text style={styles.text}>\r\n        Trykk på skjermen for å starte et nytt tema etter drikkepausen.\r\n      </Text>\r\n      <Text style={styles.text}>\r\n        Spørsmålene er av humoristisk natur, og var laget i utgangspunktet for internt bruk!\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n     backgroundColor: '#000000',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    color: '#FFFFFF',\r\n  },\r\n   text: {\r\n     fontSize: 16,\r\n     textAlign: 'center',\r\n     marginBottom: 10,\r\n     color: '#FFFFFF',\r\n   }\r\n});","// src/navigation/AppNavigator.js\r\nimport React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport StartScreen from '../screens/StartScreen';\r\nimport SelectionScreen from '../screens/SelectionScreen';\r\nimport GameScreen from '../screens/GameScreen';\r\nimport InfoScreen from '../screens/InfoScreen';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function AppNavigator() {\r\n    return (\r\n        <NavigationContainer>\r\n            {/* ADDED: screenOptions for dark header */}\r\n            <Stack.Navigator\r\n                initialRouteName=\"Start\"\r\n                screenOptions={{\r\n                    headerStyle: {\r\n                        backgroundColor: '#111111', // Dark header background\r\n                    },\r\n                    headerTintColor: '#FFFFFF', // White title and back button\r\n                    headerTitleStyle: {\r\n                        fontWeight: 'bold',\r\n                    },\r\n                     headerBackTitleVisible: false, // Hide back button text if desired\r\n                }}\r\n            >\r\n                <Stack.Screen\r\n                    name=\"Start\"\r\n                    component={StartScreen}\r\n                    options={{ title: 'Velkommen' }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Selection\"\r\n                    component={SelectionScreen}\r\n                    options={{ title: 'Velg Sett' }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Game\"\r\n                    component={GameScreen}\r\n                    options={({ route }) => ({\r\n                        title: route.params?.selectedSet?.name || 'Spillet',\r\n                        // headerBackTitle: 'Tilbake', // Back title color handled by headerTintColor now\r\n                    })}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Info\"\r\n                    component={InfoScreen}\r\n                    options={{ title: 'Informasjon' }}\r\n                />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}","import { registerRootComponent } from 'expo';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n","// App.js\r\nimport 'react-native-gesture-handler'; // Must be at the top\r\nimport React from 'react';\r\nimport AppNavigator from './src/navigation/AppNavigator';\r\nimport { GestureHandlerRootView } from 'react-native-gesture-handler'; // Import this\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    // Wrap entire app in GestureHandlerRootView\r\n    <GestureHandlerRootView style={{ flex: 1 }}>\r\n        <AppNavigator />\r\n        <StatusBar style=\"auto\" />\r\n    </GestureHandlerRootView>\r\n  );\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [748], () => (__webpack_require__(5522)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["StartScreen","navigation","_jsxs","View","style","styles","container","children","_jsx","Text","title","buttonContainer","Button","onPress","navigate","color","StyleSheet","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","marginVertical","width","questionSets","id","name","themes","questions","GAME_OVER_PROMPT","SelectionScreen","ScrollView","contentContainerStyle","map","set","selectedSet","handleSelectSet","flexGrow","textAlign","SCREEN_WIDTH","Dimensions","get","SWIPE_THRESHOLD","ANIMATION_DURATION","CardType","THEME","QUESTION","PROMPT","GAMEOVER","_worklet_10206543385938_init_data","code","_worklet_10830004893918_init_data","_worklet_3368754703655_init_data","_worklet_13661194914949_init_data","_worklet_6268055668265_init_data","_worklet_77757426541_init_data","GameScreen","route","params","themeIndex","setThemeIndex","useState","questionIndex","setQuestionIndex","currentText","setCurrentText","cardType","setCardType","translateX","useSharedValue","opacity","useEffect","console","error","currentTheme","length","warn","handleTap","resetCardPosition","tIndex","popToTop","animatedStyle","useAnimatedStyle","GameScreenJs1","transform","value","__closure","__workletHash","__initData","animated","withTiming","duration","updateNextState","goToNext","qIndex","updatePrevState","goToPrevious","prevTheme","panGesture","Gesture","Pan","onUpdate","GameScreenJs3","event","translationX","Math","abs","onEnd","GameScreenJs2","GameScreenJs4","finished","runOnJS","requestAnimationFrame","GameScreenJs5","tapGesture","Tap","GameScreenJs6","combinedGesture","Exclusive","currentThemeName","themeHeaderText","GestureDetector","gesture","cardContainer","collapsable","Animated","card","themeText","promptText","gameOverText","questionText","paddingTop","paddingHorizontal","paddingBottom","height","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","InfoScreen","text","Stack","createStackNavigator","AppNavigator","NavigationContainer","Navigator","initialRouteName","screenOptions","headerStyle","headerTintColor","headerTitleStyle","headerBackTitleVisible","Screen","component","options","registerRootComponent","GestureHandlerRootView","StatusBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}